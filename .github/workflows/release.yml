name: Build and publish

on:
  push:
    branches: [ main ]

env: 
  configuration: Release

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0

        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: 8.0.1xx

        - name: Add Github Package Registry
          run: dotnet nuget add source --username "VictorKroghDotNet" --password ${{ secrets.TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/VictorKroghDotNet/index.json"

        - name: Test
          run: |
            echo "ls -l"

        - name: Pack "VictorKrogh.Data"
          run: dotnet pack "VictorKrogh.Data.csproj" --configuration ${{ env.configuration }} -p:BuildNumber="${{ github.run_number }}"
          working-directory: "VictorKrogh.Data"
      
        - name: Pack "VictorKrogh.Data.EntityFrameworkCore"
          run: dotnet pack "VictorKrogh.Data.EntityFrameworkCore.csproj" --configuration ${{ env.configuration }} -p:BuildNumber="${{ github.run_number }}"

        - name: Upload Build Artifact
          uses: actions/upload-artifact@v2
          with:
            name: ${{ env.csproj_name }}
            path: "${{ env.csproj_name }}/bin/${{ env.configuration }}/*.nupkg"
            
    publish:
        runs-on: ubuntu-latest
        needs: build

        steps:
            - name: Download NuGet Package Artifact
              uses: actions/download-artifact@v3.0.2
              with:
                name: ${{ env.csproj_name }}
                path: artifact
  
            - name: Prep packages
              run: dotnet nuget add source --username "VictorKroghDotNet" --password ${{ secrets.TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/VictorKroghDotNet/index.json"

            - name: Publish to Github Package Registry
              run: dotnet nuget push "artifact/*.nupkg" --source "github" --api-key ${TOKEN} --skip-duplicate
              env:
                TOKEN: ${{ secrets.TOKEN }}
          
            - name: Create Release
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                repo_token: "${{ secrets.TOKEN }}"
                automatic_release_tag: "8.0.${{ github.run_number }}"
                prerelease: false
                files: "artifact/*"
